<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.batch.core.launch.support.RunIdIncrementer"/>
    <fullyQualifiedTypeName name="com.bl.lms.entity.LMS_User"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.ToString"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="com.bl.candidate.dto.Response"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="com.bl.candidate.util.TokenUtil"/>
    <fullyQualifiedTypeName name="com.bl.candidate.model.Candidate"/>
    <fullyQualifiedTypeName name="com.bl.candidate.repository.CandidateRepository"/>
    <fullyQualifiedTypeName name="com.bl.candidate.services.CandidateServices"/>
    <fullyQualifiedTypeName name="java.time.LocalDateTime"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonFormat"/>
    <fullyQualifiedTypeName name="com.bl.candidate.services.ICandidateServices"/>
    <fullyQualifiedTypeName name="com.bl.candidate.exception.LoginException"/>
    <fullyQualifiedTypeName name="com.bl.candidate.exception.UserNotFoundException"/>
    <fullyQualifiedTypeName name="com.bl.candidate.dto.CandidateDTO"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="com.bl.hirecandidate.model.Onboarding"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="com.bl.hirecandidate.services.IOnboardingServices"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.config.EnableJpaRepositories"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestHeader"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.bl.onboarding.model.Onboarding"/>
    <fullyQualifiedTypeName name="com.bl.onboarding.services.IOnboardingServices"/>
    <fullyQualifiedTypeName name="com.bl.onboarding.response.Response"/>
    <fullyQualifiedTypeName name="com.bl.onboarding.repository.OnboardingRepo"/>
    <fullyQualifiedTypeName name="com.bl.onboarding.exception.LoginException"/>
    <fullyQualifiedTypeName name="com.bl.onboarding.dto.BankInfoDTO"/>
    <fullyQualifiedTypeName name="com.bl.onboarding.dto.QualificationInfoDTO"/>
    <fullyQualifiedTypeName name="com.bl.onboarding.model.BankInfo"/>
    <fullyQualifiedTypeName name="com.bl.onboarding.model.QualificationInfo"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.bl.onboarding.dto.OnboardingDTO"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="com.bl.onboarding.exception.UserNotFoundException"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
</qualifiedTypeNameHistroy>
